name: FSW Setup
description: |
  This workflow sets up the dependencies for supporting FSW testing.
runs:
  using: "composite"
  steps:
    - name: Compute Cache Hashes
      id: compute_hashes
      shell: bash
      run: |
        echo "ZEPHYR_HASH=${{ hashFiles('FSW/west.yml', 'FSW/zephyr/module.yml') }}" >> $GITHUB_ENV

    - uses: awalsh128/cache-apt-pkgs-action@latest
      if: runner.os == 'Linux'
      with:
        packages: pkg-config libfuse-dev:i1386 gcc-multilib g++-multilib ccache g++-13-multilib g++-multilib gcc-13-multilib gcc-multilib lib32asan8 |
                  lib32atomic1 lib32gcc-13-dev lib32gomp1 lib32itm1 lib32quadmath0lib32stdc++-13-dev lib32ubsan1 libc6-dev-i386 libc6-dev-x32 libc6-x32 |
                  libhiredis1.1.0 libx32asan8 libx32atomic1 libx32gcc-13-dev libx32gcc-s1 libx32gomp1 libx32itm1 libx32quadmath0 libx32stdc++-13-dev |
                  libx32stdc++6 libx32ubsan1 ninja-build
        version: 1.0

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.12
        cache: pip

    - name: Cache Zephyr dependencies
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/west
          ~/.cache/zephyr
          ~/.west
          modules
        key: zephyr-samples-${{ runner.os }}-${{ env.ZEPHYR_HASH }}
        restore-keys: |
          zephyr-samples-${{ runner.os }}-

    - name: Setup Zephyr project
      uses: zephyrproject-rtos/action-zephyr-setup@v1.0.6
      with:
        app-path: FSW
        toolchains: arm-zephyr-eabi
