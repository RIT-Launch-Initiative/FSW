name: Build Projects

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - '*'
  schedule:
    - cron: "0 0 * * 1"

env:
  test_roots: |
    app/backplane/deployment_module
    app/backplane/power_module
    app/backplane/radio_module
    app/backplane/sensor_module
  platforms: |
    nucleo_f446re
    deployment_module
    radio_module
    sensor_module
    power_module
  linux_only_platforms: |
    native_sim

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ ubuntu-latest, macos-latest, windows-latest ]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          path: FSW
          fetch-depth: 2

      - name: Run Starter Steps
        uses: ./.github/workflows/fsw-setup

      - name: Build firmware
        working-directory: FSW
        shell: bash
        run: |
          if [ "${{ runner.os }}" = "Windows" ]; then
            EXTRA_TWISTER_FLAGS="--short-build-path -O/tmp/twister-out"
          fi
          if [ "${{ runner.os }}" = "Linux" ]; then
            export PKG_CONFIG_PATH=/usr/lib/i386-linux-gnu/pkgconfig
          fi
          function add_arglist () {
            echo "$2" | while read -r line; do
              [ -z "$line" ] && continue
              echo -n " $1 $line "
            done;
          }
          west twister $(add_arglist -T "${{ env.test_roots }}") $(add_arglist -p "${{ env.platforms }}") $(if [ "${{ runner.os }}" = "Linux" ]; then add_arglist -p "${{ env.linux_only_platforms }}"; fi) -v --inline-logs --integration $EXTRA_TWISTER_FLAGS
